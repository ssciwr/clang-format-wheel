[build-system]
requires = ["scikit-build-core"]
build-backend = "scikit_build_core.build"

[project]
name = "pmi-clang-format"
dynamic = ["version"]
authors = [{name = "Walid Boussafa", email = "walid.boussafa@outlook.com"}]
license = { text = "Apache 2.0" }
description = "Clang-Format is an LLVM-based code formatting tool"
readme = "README.md"
classifiers = [
    "Programming Language :: C",
    "Programming Language :: C++",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: Apache Software License",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Quality Assurance",
]

[tool.scikit-build.metadata.version]
provider = "scikit_build_core.metadata.regex"
regex = '^(?P<value>\d+\.\d+\.\d+[-\w]*(\.[1-9]\d*)?)'
input = "clang-format_version.txt"

[project.urls]
Clang = "http://clang.llvm.org/"
Documentation = "https://clang.llvm.org/docs/ClangFormat.html"
Download = "https://github.com/llvm/llvm-project/releases"
Source = "https://github.com/ssciwr/clang-format-wheel"

[project.scripts]
"clang-format" = "clang_format:clang_format"
"git-clang-format" = "clang_format.git_clang_format:main"
"clang-format-diff.py" = "clang_format.clang_format_diff:main"

[tool.scikit-build]
wheel.packages = ["clang_format"]
wheel.py-api = "py2.py3"
cmake.version = ">=3.16.0"
ninja.version = ">=1.10.0"
cmake.verbose = true
logging.level = "DEBUG"

[tool.cibuildwheel]
# Super-verbose output for debugging purpose
build-verbosity = 3
# Set CMAKE_GENERATOR env var which is respected by scikit-build-core to use Ninja on all platforms
environment = "CMAKE_GENERATOR=Ninja"

# Testing commands for our wheels
before-test = [
    "git config --global user.name Name",
    "git config --global user.email foo@bar.com"
]
test-requires = ["pytest", "pytest-git"]
test-command = "pytest {package}/test"